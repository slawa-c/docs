- Устанавливаем хард лимит занимаемой памяти
```
# docker container run -d -p 80:80 --name proxy -m 10485760 nginx
#OR 
# docker container run -d -p 80:80 --name proxy --memroy 10485760 nginx
#NB limit in bytes. 10485760 = 10Mb (10 * 1024 * 1024)
```

- Устанавливаем хард и софт лимит занимаемой памяти
```
docker container run -d -p 80:80 --name proxy -m 10485760 --memory-reservation 5242880 nginx

# 10485760 = 10Mb
# 5242880 = 5Mb
# --memory-reservation = baseline
```

- Устанавливаем хард лимит и лимит swap который может использовать контейнер
```
docker container run -d -p 80:80 --name proxy -m 5242880 --memory-swap 10485760 nginx
```

- Устанавливаем политику рестарта контейнера 
```
docker container run -d -p 80:80 --name proxy --restart always nginx

# no — default
# on-failure — перезагрузить в случае ошибки
# always — всегда перезагружать
# unless-stopped — пока контейнер не будет остановлен
```

- Удаляем контейнер после его остановки
```
docker container run --rm -d -p 80:80 --name proxy nginx
```

Подключаем псевдо TTY
```
# docker container run -i -t --name proxy ubuntu bash
#OR
# docker container run -it --name proxy ubuntu bash
```

Устанавливаем имя контейнера
```
docker container create -p 80:80 --name proxy nginx
```

```
docker container run -d -p 80:80 --name proxy nginx

# Присоединяет stdout, stderror к контейнеру
# docker container attach proxy 
```

```
CONTAINER_ID=$(docker container run -d -p 80:80 --name proxy nginx)

# Создать новый образ на основании контейнера 
docker container commit --author "Andrey Prisniak aprisniak@lectrum.io" --message "Add curl" "$CONTAINER_ID" sotream/nginx-curl:0.0.1
```






















